{"name":"OWL-Reasoner-Vergleich auf Life-Science-Ontologien","tagline":"Praktikum Semantic Web","body":"# Aufgabenstellung\r\n\r\nGegenwärtig steht eine Vielzahl von umfangreichen semantischen Datenbanken aus dem Bereich der Biologie, Medizin und Genetik zur Verfügung. Darauf aufbauend und mit der Unterstützung von OWL Reasonern zur Extraktion von implizitem Wissen können bspw. neue Anwendungen zur Unterstützung von Domänenexperten bei der Suche nach Symptomen und Ursachen für Krankheiten und wirksamen Medikamenten entstehen. Leider stellt der Einsatz von Reasoning-Techniken mit aktueller Hardware auf derart umfangreichen Datensätzen gegenwärtig eine Herausforderung dar. Im Praktikum sollen daher verschiedene OWL Reasoner mit Hilfe eines [Frameworks](https://github.com/andreas-steigmiller/ore-2014-competition-framework/) auf gegebenen Daten getestet und verglichen werden. Ziel des Praktikums ist es, nach Abschluss der Tests Aussagen darüber treffen zu können, welche OWL Reasoner für welche Datensätze besser geeignet sind, bzw. ob sich bestimmte OWL Reasoner allgemein besser oder schlechter für den Einsatz in der Life-Science-Domäne eignen.\r\n\r\n# Verwendete Reasoner\r\n\r\nReasoner | unterstütztes OWL-Profil | Lizenz | Download-URL\r\n-------- | ------------------------ | ------ | ------------\r\nPellet | OWL2-DL | AGPL/proprietary | [Download](https://github.com/Complexible/pellet/releases)\r\nFact++ | OWL2-DL | LGPL | [Download](https://drive.google.com/folderview?id=0B688Ilel_jz_OVktYU5SdGpsek0&usp=sharing)\r\nHermiT | OWL2-DL | LGPL | [Download](http://www.hermit-reasoner.com/download/current/HermiT.zip)\r\nTrOWL | OWL2-EL | ??? | [Download](http://trowl.org/download-trowl-v1-5/)\r\nELK | OWL2-EL | Apache License 2.0 | [Download](https://code.google.com/p/elk-reasoner/downloads/detail?name=elk-distribution-0.4.1-standalone-executable.zip&can=2&q=)\r\nMORe | OWL2-DL | LGPL | [Download](https://code.google.com/p/more-reasoner/downloads/list)\r\nChainsaw | OWL2-DL | ??? | [Download](https://bitbucket.org/ignazio1977/chainsaw/downloads)\r\n\r\n# Verwendete Ontoglogien\r\n\r\nKürzel | Name | Typ | Ausdrucksstärke | #Axiome\r\n------ | ---- | --- | --------------- | -------\r\nGFO | General Formal Ontology | Upper Level Ont. | SHIN | 524\r\nBT | BioTop | Upper Level Ont. | sRI | 2322\r\nBFO | Basic Formal Ontology | Upper Level Ont. | sRIQ | 1684\r\nBSPO | Biological Spatial Ontology | Upper Level Ont. | ALERI+ | 1874\r\nGO | Gene Ontology (importiert BFO, RO) | Domain Ont. | sRI | 523951\r\nMA | Mouse Adult Gross Anatomy Ontology | Domain Ont. | ALE+ | 19527\r\nCL | Cell Ontology (importiert ChEBI, CLO, GO, NCBITaxon, PATO, PR, RO, UBERON) | Domain Ont. | sRI | 37420\r\nUBERON | Uber Anatomy Ontology (importiert BFO, BSPO, RO) | Domain Ont. | sRIQ | 223367\r\nChEBI | Chemical Entities of Biological Interest Ontology | Domain Ont. | ALE+ | 956246\r\nDOID | Human Disease Ontology | Domain Ont. | AL | 108410\r\nHP | Human Phenotype Ontology (importiert ChEBI, DOID, GO, HSAPDV, MPATH, NBO, PATO, PR, RO, UBERON) | Domain Ont. | sRI | 205151\r\n\r\nInformationen zur Ausdrucksstärke können [hier](http://www.cs.man.ac.uk/~ezolin/dl/) und im nachfolgenden Diagramm gefunden werden.\r\n\r\n![](http://i.imgur.com/vg4o5Mn.jpg)\r\n\r\n# Das Framework\r\n\r\nBeim [Framework](https://github.com/andreas-steigmiller/ore-2014-competition-framework/) handelt es sich um das OWL Reasoner Evaluation 2014 (ORE2014) Competition Framework, was in Java realisiert wurde und deswegen auf allen Plattformen lauffähig sein sollte, die Java unterstützen. Damit ein Wettbewerb auf verschiedenen Plattformen ausgeführt werden kann, müssen die teilnehmenden Reasoner verschieden konfiguriert werden. Insbesondere müssen die Wrapper, die die Reasoner ausführen, auf der jeweiligen Plattform ausführbar sein (z.B. shell skripte unter Unix/Linux und batch dateien unter Windows).\r\n\r\n# Konfiguration der Reasoner\r\n\r\n## HermiT\r\n\r\nHermiT wurde bereits beim ORE2014 Frameworks mitgeliefert und musste nicht weiter angepasst werden.\r\n\r\n## Chainsaw, Fact++, TrOWL, MORe\r\n\r\nEinige Reasoner konnten glücklicherweise aus den [Daten](https://zenodo.org/record/11145#.VZqMAvmqhBc) des vergangenen, offiziellen Wettbewerbs entnommen werden und mussten aus deshalb nicht weiter angepasst werden.\r\n\r\n## ELK\r\n\r\nDer ELK Reasoner ist zwar auch in den zuvor genannten Daten vorhanden, jedoch ist uns die Konfiguration des Reasoners gelungen, bevor wir auf diese gestoßen sind.\r\nZunächst haben wir uns die [OWL API Version](https://code.google.com/p/elk-reasoner/downloads/detail?name=elk-distribution-0.4.1-owlapi-library.zip&can=2&q=) von ELK heruntergeladen und dann eine Konfiguration mit Hilfe der [Dokumentation](https://github.com/andreas-steigmiller/ore-2014-competition-framework/blob/master/doc/README.pdf) und dem bereits vorhandenen HermiT erstellt. Ein erneutes Erstellen des OREv2ReasonerWrappers war außerdem nötig um diesem die neuen Bibliotheken bekannt zu machen.\r\n\r\n## Pellet\r\n\r\nBei Pellet gab es einige Schwierigkeiten, da es keine fertigen Binaries zum Download gab. Aus diesem Grund mussten wir diese selbst aus den [Sourcecode](https://github.com/Complexible/pellet/releases/tag/2.3.1) erstellen. Allerdings gab es hierbei ein Problem mit Java 8, welches nach einer [gründlichen Recherche](https://github.com/Complexible/pellet/pull/15/files) behoben werden konnte. Nach dem Erstellen einer ausführbaren Version des Reasoners lief der Rest genauso, wie beim ELK Reasoner ab: Eine Konfiguration wurde erstellt und dem Wrapper die neuen Bibliotheken bekannt gemacht.\r\n\r\n# Einbau der Ontologien\r\n\r\nMit den meisten Ontologien haben wir keine Probleme gehabt, sie wurden vom Framework mit Hilfe der Skripte, die wir im [ORE 2014 Live Competition Queries package](https://zenodo.org/record/11133#.VZqR6rxalDs) finden konnten, geparst, aufgrund ihrer Ausdrucksstärke in die Kategorien EL oder DL eingeteilt. Dabei wurden auch die für den Wettbewerb relevanten Queries erstellt. Nach ein paar manuellen Anpassungen von BFO, CL, UBERON und HP, waren auch diese lauffähig und konnten von den Reasonern bearbeitet werden. Diese hatte das Framework zunächst nicht als Valide anerkennen können.\r\n\r\n# Ausführung\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}